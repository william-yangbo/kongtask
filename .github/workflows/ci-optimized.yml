name: CI (Optimized)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Permissions needed for SARIF upload and security scanning
permissions:
  contents: read
  security-events: write
  actions: read

env:
  GO_VERSION: '1.23'
  POSTGRES_VERSION: '16'

jobs:
  # Fast feedback job - runs first and fails fast
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run: go build -v ./...

      - name: Run go vet
        run: go vet ./...

      - name: Run golangci-lint (includes staticcheck, golint, and more)
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m --fast

  # Main test job - only one Go version, one PostgreSQL version
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: quick-checks

    services:
      postgres:
        image: postgres:${{ env.POSTGRES_VERSION }}-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run tests
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test

      - name: Run integration tests
        run: go test -v ./test/integration/...
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  # Compatibility test - only run on main branch pushes or when Go files change
  compatibility:
    name: Compatibility Test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || contains(github.event.head_commit.modified, '.go')
    needs: test

    strategy:
      matrix:
        go-version: ['1.22'] # Only test older Go version for compatibility
        postgres-version: ['14', '15'] # Only test older PostgreSQL versions

    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run basic tests
        run: go test ./... # No race detection for faster execution
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test

  # Performance tests - only run on main branch or when performance-related files change
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || contains(join(github.event.commits.*.modified, ' '), 'perftest/') || contains(join(github.event.commits.*.modified, ' '), 'pkg/worker/')
    needs: test

    services:
      postgres:
        image: postgres:${{ env.POSTGRES_VERSION }}-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run performance tests
        run: go test -v ./perftest/... -timeout=10m
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kongtask_test

  # Security scanning - only run on main branch pushes (weekly or on security-sensitive changes)
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'schedule' || contains(join(github.event.commits.*.modified, ' '), 'go.mod') || contains(join(github.event.commits.*.modified, ' '), '.github/'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: 'codeql'

      - name: Run Gosec Security Scanner
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -no-fail -fmt sarif -out results.sarif ./...

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: results.sarif
          category: 'gosec'
